# coding: utf-8
# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!

VAGRANTFILE_API_VERSION = "2"

DEFAULT_NAMESPACE="openshift"
IMAGE_PREFIX="openshift/origin"
IMAGE_VERSION="v1.3.1"
OPENSHIFT_BINARY_URL="https://github.com/openshift/origin/releases/download/v1.3.1/openshift-origin-client-tools-v1.3.1-dad658de7465ba8a234a4fb40b5b446a45a4cee1-linux-64bit.tar.gz"
OPENSHIFT_ROUTER_VERSION=$IMAGE_VERSION
JBOSS_APP_TEMPLATES_URL="https://github.com/jboss-openshift/application-templates"

Vagrant.require_version ">= 1.7.2"

# Top level domain

#MASTER_API_IP="192.168.121.151"
MASTER_API_IP="172.28.128.4"
MASTER_API_PORT=8443
MASTER_API="#{MASTER_API_IP}:#{MASTER_API_PORT}"

$tld = "#{MASTER_API_IP}.xip.io"
$hostname = "vagrant.#{$tld}"

$provisionScript = <<SCRIPT
dnf makecache fast && yum install socat git PyYAML pyOpenSSL python2-dnf libselinux-python dbus-python -y
pip install paramiko PyYAML Jinja2 httplib2 six

sed -e '/^::1*/ s/^#*/#/' -i /etc/hosts
systemctl restart docker

if [ -d "/tmp/openshiftbinary" ] ; then 
 echo "Copying OpenShift binaries from shared directory"
 mv /tmp/openshiftbinary/* /usr/local/bin 
else
  if [ ! -f "/usr/bin/oc" ]; then
    mkdir /tmp/openshift
    echo "Downloading OpenShift binaries..."
    ret=`curl --connect-timeout 10 --retry 10 --retry-max-time 10  -sSL #{OPENSHIFT_BINARY_URL} | tar xzv -C /tmp/openshift`
    echo "ret: $ret"
    if [ $ret != 0 ]; then
      echo "Unable to download the openshift binary"
      exit 1
    fi
    find /tmp/openshift -type f -exec mv -i {} /usr/bin \\;
  fi
fi

KUBECONFIG= oc cluster down

ORIGIN_DIR=/etc/origin
if [ -z ${CLOBBER} ]; then
  echo "Removing configs and host data..."
  rm -rf $ORIGIN_DIR
fi

KUBECONFIG= oc cluster up --public-hostname=#{MASTER_API_IP} --host-data-dir=$ORIGIN_DIR/openshift.local.etcd \
  --routing-suffix=#{$tld} --use-existing-config --image=#{IMAGE_PREFIX} --version=#{IMAGE_VERSION}  \
  --host-config-dir=$ORIGIN_DIR

KUBECONFIG="$ORIGIN_DIR/master/admin.kubeconfig"
chmod 644 $KUBECONFIG
echo "KUBECONFIG=$KUBECONFIG" >> /root/.bashrc
echo "KUBECONFIG=$KUBECONFIG" >> /home/vagrant/.bashrc 

oc adm policy add-cluster-role-to-user cluster-admin admin

SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
#  config.landrush.enabled = true
#  config.landrush.tld = $tld

  config.vm.network "private_network", ip: MASTER_API_IP
  config.vm.network "forwarded_port", guest: MASTER_API_PORT, host: 8443
  config.vm.network "forwarded_port", guest: 80, host: 1080
  config.vm.network "forwarded_port", guest: 443, host: 1443

  config.vm.hostname = $hostname

  config.vm.provider :libvirt do |v, override|
    override.vm.box = "https://mirror.openshift.com/pub/vagrant/boxes/openshift3/fedora_libvirt_inst.box"
    v.cpus = 2
    v.memory = 4096
  end

  config.vm.provision "shell", inline: $provisionScript, keep_color: true

  if ENV["SHARE_FOLDERS"]
    ENV["SHARE_FOLDERS"].split(':').each do |share|
      config.vm.synced_folder share, 
        "/home/vagrant/share/#{File.basename(share)}",
        rsync__args: %w(--verbose --archive --delete), 
        nfs_udp: false # has issues when using NFS from within a docker container
    end
  end
end
