/**
 * OpenShift API (with Kubernetes)
 * OpenShift provides builds, application lifecycle, image content management, and administrative policy on top of Kubernetes. The API allows consistent management of those objects.  All API operations are authenticated via an Authorization bearer token that is provided for service accounts as a generated secret (in JWT form) or via the native OAuth endpoint located at /oauth/authorize. Core infrastructure components may use client certificates that require no authentication.  All API operations return a 'resourceVersion' string that represents the version of the object in the underlying storage. The standard LIST operation performs a snapshot read of the underlying objects, returning a resourceVersion representing a consistent version of the listed objects. The WATCH operation allows all updates to a set of objects after the provided resourceVersion to be observed by a client. By listing and beginning a watch from the returned resourceVersion, clients may observe a consistent view of the state of one or more objects. Note that WATCH always returns the update after the provided resourceVersion. Watch may be extended a limited time in the past - using etcd 2 the watch window is 1000 events (which on a large cluster may only be a few tens of seconds) so clients must explicitly handle the \"watch to old error\" by re-listing.  Objects are divided into two rough categories - those that have a lifecycle and must reflect the state of the cluster, and those that have no state. Objects with lifecycle typically have three main sections:  * 'metadata' common to all objects * a 'spec' that represents the desired state * a 'status' that represents how much of the desired state is reflected on   the cluster at the current time  Objects that have no state have 'metadata' but may lack a 'spec' or 'status' section.  Objects are divided into those that are namespace scoped (only exist inside of a namespace) and those that are cluster scoped (exist outside of a namespace). A namespace scoped resource will be deleted when the namespace is deleted and cannot be created if the namespace has not yet been created or is in the process of deletion. Cluster scoped resources are typically only accessible to admins - resources like nodes, persistent volumes, and cluster policy.  All objects have a schema that is a combination of the 'kind' and 'apiVersion' fields. This schema is additive only for any given version - no backwards incompatible changes are allowed without incrementing the apiVersion. The server will return and accept a number of standard responses that share a common schema - for instance, the common error type is 'unversioned.Status' (described below) and will be returned on any error from the API server.  The API is available in multiple serialization formats - the default is JSON (Accept: application/json and Content-Type: application/json) but clients may also use YAML (application/yaml) or the native Protobuf schema (application/vnd.kubernetes.protobuf). Note that the format of the WATCH API call is slightly different - for JSON it returns newline delimited objects while for Protobuf it returns length-delimited frames (4 bytes in network-order) that contain a 'versioned.Watch' Protobuf object.  See the OpenShift documentation at https://docs.openshift.org for more information. 
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.openshift.restclient.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.openshift.restclient.model.V1DeploymentStrategy;
import com.openshift.restclient.model.V1DeploymentTriggerPolicy;
import com.openshift.restclient.model.V1PodTemplateSpec;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * DeploymentConfigSpec represents the desired state of the deployment.
 */
@ApiModel(description = "DeploymentConfigSpec represents the desired state of the deployment.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-10-24T16:19:28.908-04:00")
public class V1DeploymentConfigSpec   {
  @SerializedName("minReadySeconds")
  private Integer minReadySeconds = null;

  @SerializedName("paused")
  private Boolean paused = null;

  @SerializedName("replicas")
  private Integer replicas = null;

  @SerializedName("revisionHistoryLimit")
  private Integer revisionHistoryLimit = null;

  @SerializedName("selector")
  private Object selector = null;

  @SerializedName("strategy")
  private V1DeploymentStrategy strategy = null;

  @SerializedName("template")
  private V1PodTemplateSpec template = null;

  @SerializedName("test")
  private Boolean test = null;

  @SerializedName("triggers")
  private List<V1DeploymentTriggerPolicy> triggers = new ArrayList<V1DeploymentTriggerPolicy>();

  public V1DeploymentConfigSpec minReadySeconds(Integer minReadySeconds) {
    this.minReadySeconds = minReadySeconds;
    return this;
  }

   /**
   * MinReadySeconds is the minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
   * @return minReadySeconds
  **/
  @ApiModelProperty(example = "null", value = "MinReadySeconds is the minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)")
  public Integer getMinReadySeconds() {
    return minReadySeconds;
  }

  public void setMinReadySeconds(Integer minReadySeconds) {
    this.minReadySeconds = minReadySeconds;
  }

  public V1DeploymentConfigSpec paused(Boolean paused) {
    this.paused = paused;
    return this;
  }

   /**
   * Paused indicates that the deployment config is paused resulting in no new deployments on template changes or changes in the template caused by other triggers.
   * @return paused
  **/
  @ApiModelProperty(example = "null", value = "Paused indicates that the deployment config is paused resulting in no new deployments on template changes or changes in the template caused by other triggers.")
  public Boolean getPaused() {
    return paused;
  }

  public void setPaused(Boolean paused) {
    this.paused = paused;
  }

  public V1DeploymentConfigSpec replicas(Integer replicas) {
    this.replicas = replicas;
    return this;
  }

   /**
   * Replicas is the number of desired replicas.
   * @return replicas
  **/
  @ApiModelProperty(example = "null", required = true, value = "Replicas is the number of desired replicas.")
  public Integer getReplicas() {
    return replicas;
  }

  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }

  public V1DeploymentConfigSpec revisionHistoryLimit(Integer revisionHistoryLimit) {
    this.revisionHistoryLimit = revisionHistoryLimit;
    return this;
  }

   /**
   * RevisionHistoryLimit is the number of old ReplicationControllers to retain to allow for rollbacks. This field is a pointer to allow for differentiation between an explicit zero and not specified.
   * @return revisionHistoryLimit
  **/
  @ApiModelProperty(example = "null", value = "RevisionHistoryLimit is the number of old ReplicationControllers to retain to allow for rollbacks. This field is a pointer to allow for differentiation between an explicit zero and not specified.")
  public Integer getRevisionHistoryLimit() {
    return revisionHistoryLimit;
  }

  public void setRevisionHistoryLimit(Integer revisionHistoryLimit) {
    this.revisionHistoryLimit = revisionHistoryLimit;
  }

  public V1DeploymentConfigSpec selector(Object selector) {
    this.selector = selector;
    return this;
  }

   /**
   * Selector is a label query over pods that should match the Replicas count.
   * @return selector
  **/
  @ApiModelProperty(example = "null", value = "Selector is a label query over pods that should match the Replicas count.")
  public Object getSelector() {
    return selector;
  }

  public void setSelector(Object selector) {
    this.selector = selector;
  }

  public V1DeploymentConfigSpec strategy(V1DeploymentStrategy strategy) {
    this.strategy = strategy;
    return this;
  }

   /**
   * Get strategy
   * @return strategy
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public V1DeploymentStrategy getStrategy() {
    return strategy;
  }

  public void setStrategy(V1DeploymentStrategy strategy) {
    this.strategy = strategy;
  }

  public V1DeploymentConfigSpec template(V1PodTemplateSpec template) {
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @ApiModelProperty(example = "null", value = "")
  public V1PodTemplateSpec getTemplate() {
    return template;
  }

  public void setTemplate(V1PodTemplateSpec template) {
    this.template = template;
  }

  public V1DeploymentConfigSpec test(Boolean test) {
    this.test = test;
    return this;
  }

   /**
   * Test ensures that this deployment config will have zero replicas except while a deployment is running. This allows the deployment config to be used as a continuous deployment test - triggering on images, running the deployment, and then succeeding or failing. Post strategy hooks and After actions can be used to integrate successful deployment with an action.
   * @return test
  **/
  @ApiModelProperty(example = "null", required = true, value = "Test ensures that this deployment config will have zero replicas except while a deployment is running. This allows the deployment config to be used as a continuous deployment test - triggering on images, running the deployment, and then succeeding or failing. Post strategy hooks and After actions can be used to integrate successful deployment with an action.")
  public Boolean getTest() {
    return test;
  }

  public void setTest(Boolean test) {
    this.test = test;
  }

  public V1DeploymentConfigSpec triggers(List<V1DeploymentTriggerPolicy> triggers) {
    this.triggers = triggers;
    return this;
  }

  public V1DeploymentConfigSpec addTriggersItem(V1DeploymentTriggerPolicy triggersItem) {
    this.triggers.add(triggersItem);
    return this;
  }

   /**
   * Triggers determine how updates to a DeploymentConfig result in new deployments. If no triggers are defined, a new deployment can only occur as a result of an explicit client update to the DeploymentConfig with a new LatestVersion. If null, defaults to having a config change trigger.
   * @return triggers
  **/
  @ApiModelProperty(example = "null", required = true, value = "Triggers determine how updates to a DeploymentConfig result in new deployments. If no triggers are defined, a new deployment can only occur as a result of an explicit client update to the DeploymentConfig with a new LatestVersion. If null, defaults to having a config change trigger.")
  public List<V1DeploymentTriggerPolicy> getTriggers() {
    return triggers;
  }

  public void setTriggers(List<V1DeploymentTriggerPolicy> triggers) {
    this.triggers = triggers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1DeploymentConfigSpec v1DeploymentConfigSpec = (V1DeploymentConfigSpec) o;
    return Objects.equals(this.minReadySeconds, v1DeploymentConfigSpec.minReadySeconds) &&
        Objects.equals(this.paused, v1DeploymentConfigSpec.paused) &&
        Objects.equals(this.replicas, v1DeploymentConfigSpec.replicas) &&
        Objects.equals(this.revisionHistoryLimit, v1DeploymentConfigSpec.revisionHistoryLimit) &&
        Objects.equals(this.selector, v1DeploymentConfigSpec.selector) &&
        Objects.equals(this.strategy, v1DeploymentConfigSpec.strategy) &&
        Objects.equals(this.template, v1DeploymentConfigSpec.template) &&
        Objects.equals(this.test, v1DeploymentConfigSpec.test) &&
        Objects.equals(this.triggers, v1DeploymentConfigSpec.triggers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minReadySeconds, paused, replicas, revisionHistoryLimit, selector, strategy, template, test, triggers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1DeploymentConfigSpec {\n");
    
    sb.append("    minReadySeconds: ").append(toIndentedString(minReadySeconds)).append("\n");
    sb.append("    paused: ").append(toIndentedString(paused)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    revisionHistoryLimit: ").append(toIndentedString(revisionHistoryLimit)).append("\n");
    sb.append("    selector: ").append(toIndentedString(selector)).append("\n");
    sb.append("    strategy: ").append(toIndentedString(strategy)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    test: ").append(toIndentedString(test)).append("\n");
    sb.append("    triggers: ").append(toIndentedString(triggers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

