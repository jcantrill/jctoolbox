/**
 * OpenShift API (with Kubernetes)
 * OpenShift provides builds, application lifecycle, image content management, and administrative policy on top of Kubernetes. The API allows consistent management of those objects.  All API operations are authenticated via an Authorization bearer token that is provided for service accounts as a generated secret (in JWT form) or via the native OAuth endpoint located at /oauth/authorize. Core infrastructure components may use client certificates that require no authentication.  All API operations return a 'resourceVersion' string that represents the version of the object in the underlying storage. The standard LIST operation performs a snapshot read of the underlying objects, returning a resourceVersion representing a consistent version of the listed objects. The WATCH operation allows all updates to a set of objects after the provided resourceVersion to be observed by a client. By listing and beginning a watch from the returned resourceVersion, clients may observe a consistent view of the state of one or more objects. Note that WATCH always returns the update after the provided resourceVersion. Watch may be extended a limited time in the past - using etcd 2 the watch window is 1000 events (which on a large cluster may only be a few tens of seconds) so clients must explicitly handle the \"watch to old error\" by re-listing.  Objects are divided into two rough categories - those that have a lifecycle and must reflect the state of the cluster, and those that have no state. Objects with lifecycle typically have three main sections:  * 'metadata' common to all objects * a 'spec' that represents the desired state * a 'status' that represents how much of the desired state is reflected on   the cluster at the current time  Objects that have no state have 'metadata' but may lack a 'spec' or 'status' section.  Objects are divided into those that are namespace scoped (only exist inside of a namespace) and those that are cluster scoped (exist outside of a namespace). A namespace scoped resource will be deleted when the namespace is deleted and cannot be created if the namespace has not yet been created or is in the process of deletion. Cluster scoped resources are typically only accessible to admins - resources like nodes, persistent volumes, and cluster policy.  All objects have a schema that is a combination of the 'kind' and 'apiVersion' fields. This schema is additive only for any given version - no backwards incompatible changes are allowed without incrementing the apiVersion. The server will return and accept a number of standard responses that share a common schema - for instance, the common error type is 'unversioned.Status' (described below) and will be returned on any error from the API server.  The API is available in multiple serialization formats - the default is JSON (Accept: application/json and Content-Type: application/json) but clients may also use YAML (application/yaml) or the native Protobuf schema (application/vnd.kubernetes.protobuf). Note that the format of the WATCH API call is slightly different - for JSON it returns newline delimited objects while for Protobuf it returns length-delimited frames (4 bytes in network-order) that contain a 'versioned.Watch' Protobuf object.  See the OpenShift documentation at https://docs.openshift.org for more information. 
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.openshift.restclient.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.openshift.restclient.model.V1ObjectMeta;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * OAuthAccessToken describes an OAuth access token
 */
@ApiModel(description = "OAuthAccessToken describes an OAuth access token")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-10-24T16:19:28.908-04:00")
public class V1OAuthAccessToken   {
  @SerializedName("apiVersion")
  private String apiVersion = null;

  @SerializedName("authorizeToken")
  private String authorizeToken = null;

  @SerializedName("clientName")
  private String clientName = null;

  @SerializedName("expiresIn")
  private Long expiresIn = null;

  @SerializedName("kind")
  private String kind = null;

  @SerializedName("metadata")
  private V1ObjectMeta metadata = null;

  @SerializedName("redirectURI")
  private String redirectURI = null;

  @SerializedName("refreshToken")
  private String refreshToken = null;

  @SerializedName("scopes")
  private List<String> scopes = new ArrayList<String>();

  @SerializedName("userName")
  private String userName = null;

  @SerializedName("userUID")
  private String userUID = null;

  public V1OAuthAccessToken apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

   /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#resources
   * @return apiVersion
  **/
  @ApiModelProperty(example = "null", value = "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#resources")
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }

  public V1OAuthAccessToken authorizeToken(String authorizeToken) {
    this.authorizeToken = authorizeToken;
    return this;
  }

   /**
   * AuthorizeToken contains the token that authorized this token
   * @return authorizeToken
  **/
  @ApiModelProperty(example = "null", value = "AuthorizeToken contains the token that authorized this token")
  public String getAuthorizeToken() {
    return authorizeToken;
  }

  public void setAuthorizeToken(String authorizeToken) {
    this.authorizeToken = authorizeToken;
  }

  public V1OAuthAccessToken clientName(String clientName) {
    this.clientName = clientName;
    return this;
  }

   /**
   * ClientName references the client that created this token.
   * @return clientName
  **/
  @ApiModelProperty(example = "null", value = "ClientName references the client that created this token.")
  public String getClientName() {
    return clientName;
  }

  public void setClientName(String clientName) {
    this.clientName = clientName;
  }

  public V1OAuthAccessToken expiresIn(Long expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

   /**
   * ExpiresIn is the seconds from CreationTime before this token expires.
   * @return expiresIn
  **/
  @ApiModelProperty(example = "null", value = "ExpiresIn is the seconds from CreationTime before this token expires.")
  public Long getExpiresIn() {
    return expiresIn;
  }

  public void setExpiresIn(Long expiresIn) {
    this.expiresIn = expiresIn;
  }

  public V1OAuthAccessToken kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#types-kinds
   * @return kind
  **/
  @ApiModelProperty(example = "null", value = "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#types-kinds")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public V1OAuthAccessToken metadata(V1ObjectMeta metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(example = "null", value = "")
  public V1ObjectMeta getMetadata() {
    return metadata;
  }

  public void setMetadata(V1ObjectMeta metadata) {
    this.metadata = metadata;
  }

  public V1OAuthAccessToken redirectURI(String redirectURI) {
    this.redirectURI = redirectURI;
    return this;
  }

   /**
   * RedirectURI is the redirection associated with the token.
   * @return redirectURI
  **/
  @ApiModelProperty(example = "null", value = "RedirectURI is the redirection associated with the token.")
  public String getRedirectURI() {
    return redirectURI;
  }

  public void setRedirectURI(String redirectURI) {
    this.redirectURI = redirectURI;
  }

  public V1OAuthAccessToken refreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

   /**
   * RefreshToken is the value by which this token can be renewed. Can be blank.
   * @return refreshToken
  **/
  @ApiModelProperty(example = "null", value = "RefreshToken is the value by which this token can be renewed. Can be blank.")
  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }

  public V1OAuthAccessToken scopes(List<String> scopes) {
    this.scopes = scopes;
    return this;
  }

  public V1OAuthAccessToken addScopesItem(String scopesItem) {
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * Scopes is an array of the requested scopes.
   * @return scopes
  **/
  @ApiModelProperty(example = "null", value = "Scopes is an array of the requested scopes.")
  public List<String> getScopes() {
    return scopes;
  }

  public void setScopes(List<String> scopes) {
    this.scopes = scopes;
  }

  public V1OAuthAccessToken userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * UserName is the user name associated with this token
   * @return userName
  **/
  @ApiModelProperty(example = "null", value = "UserName is the user name associated with this token")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public V1OAuthAccessToken userUID(String userUID) {
    this.userUID = userUID;
    return this;
  }

   /**
   * UserUID is the unique UID associated with this token
   * @return userUID
  **/
  @ApiModelProperty(example = "null", value = "UserUID is the unique UID associated with this token")
  public String getUserUID() {
    return userUID;
  }

  public void setUserUID(String userUID) {
    this.userUID = userUID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1OAuthAccessToken v1OAuthAccessToken = (V1OAuthAccessToken) o;
    return Objects.equals(this.apiVersion, v1OAuthAccessToken.apiVersion) &&
        Objects.equals(this.authorizeToken, v1OAuthAccessToken.authorizeToken) &&
        Objects.equals(this.clientName, v1OAuthAccessToken.clientName) &&
        Objects.equals(this.expiresIn, v1OAuthAccessToken.expiresIn) &&
        Objects.equals(this.kind, v1OAuthAccessToken.kind) &&
        Objects.equals(this.metadata, v1OAuthAccessToken.metadata) &&
        Objects.equals(this.redirectURI, v1OAuthAccessToken.redirectURI) &&
        Objects.equals(this.refreshToken, v1OAuthAccessToken.refreshToken) &&
        Objects.equals(this.scopes, v1OAuthAccessToken.scopes) &&
        Objects.equals(this.userName, v1OAuthAccessToken.userName) &&
        Objects.equals(this.userUID, v1OAuthAccessToken.userUID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiVersion, authorizeToken, clientName, expiresIn, kind, metadata, redirectURI, refreshToken, scopes, userName, userUID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1OAuthAccessToken {\n");
    
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    authorizeToken: ").append(toIndentedString(authorizeToken)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    redirectURI: ").append(toIndentedString(redirectURI)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    userUID: ").append(toIndentedString(userUID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

