/**
 * OpenShift API (with Kubernetes)
 * OpenShift provides builds, application lifecycle, image content management, and administrative policy on top of Kubernetes. The API allows consistent management of those objects.  All API operations are authenticated via an Authorization bearer token that is provided for service accounts as a generated secret (in JWT form) or via the native OAuth endpoint located at /oauth/authorize. Core infrastructure components may use client certificates that require no authentication.  All API operations return a 'resourceVersion' string that represents the version of the object in the underlying storage. The standard LIST operation performs a snapshot read of the underlying objects, returning a resourceVersion representing a consistent version of the listed objects. The WATCH operation allows all updates to a set of objects after the provided resourceVersion to be observed by a client. By listing and beginning a watch from the returned resourceVersion, clients may observe a consistent view of the state of one or more objects. Note that WATCH always returns the update after the provided resourceVersion. Watch may be extended a limited time in the past - using etcd 2 the watch window is 1000 events (which on a large cluster may only be a few tens of seconds) so clients must explicitly handle the \"watch to old error\" by re-listing.  Objects are divided into two rough categories - those that have a lifecycle and must reflect the state of the cluster, and those that have no state. Objects with lifecycle typically have three main sections:  * 'metadata' common to all objects * a 'spec' that represents the desired state * a 'status' that represents how much of the desired state is reflected on   the cluster at the current time  Objects that have no state have 'metadata' but may lack a 'spec' or 'status' section.  Objects are divided into those that are namespace scoped (only exist inside of a namespace) and those that are cluster scoped (exist outside of a namespace). A namespace scoped resource will be deleted when the namespace is deleted and cannot be created if the namespace has not yet been created or is in the process of deletion. Cluster scoped resources are typically only accessible to admins - resources like nodes, persistent volumes, and cluster policy.  All objects have a schema that is a combination of the 'kind' and 'apiVersion' fields. This schema is additive only for any given version - no backwards incompatible changes are allowed without incrementing the apiVersion. The server will return and accept a number of standard responses that share a common schema - for instance, the common error type is 'unversioned.Status' (described below) and will be returned on any error from the API server.  The API is available in multiple serialization formats - the default is JSON (Accept: application/json and Content-Type: application/json) but clients may also use YAML (application/yaml) or the native Protobuf schema (application/vnd.kubernetes.protobuf). Note that the format of the WATCH API call is slightly different - for JSON it returns newline delimited objects while for Protobuf it returns length-delimited frames (4 bytes in network-order) that contain a 'versioned.Watch' Protobuf object.  See the OpenShift documentation at https://docs.openshift.org for more information. 
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.openshift.restclient.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.openshift.restclient.model.V1Capability;
import com.openshift.restclient.model.V1FSGroupStrategyOptions;
import com.openshift.restclient.model.V1FSType;
import com.openshift.restclient.model.V1ObjectMeta;
import com.openshift.restclient.model.V1RunAsUserStrategyOptions;
import com.openshift.restclient.model.V1SELinuxContextStrategyOptions;
import com.openshift.restclient.model.V1SupplementalGroupsStrategyOptions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * SecurityContextConstraints governs the ability to make requests that affect the SecurityContext that will be applied to a container.
 */
@ApiModel(description = "SecurityContextConstraints governs the ability to make requests that affect the SecurityContext that will be applied to a container.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-10-24T16:19:28.908-04:00")
public class V1SecurityContextConstraints   {
  @SerializedName("allowHostDirVolumePlugin")
  private Boolean allowHostDirVolumePlugin = null;

  @SerializedName("allowHostIPC")
  private Boolean allowHostIPC = null;

  @SerializedName("allowHostNetwork")
  private Boolean allowHostNetwork = null;

  @SerializedName("allowHostPID")
  private Boolean allowHostPID = null;

  @SerializedName("allowHostPorts")
  private Boolean allowHostPorts = null;

  @SerializedName("allowPrivilegedContainer")
  private Boolean allowPrivilegedContainer = null;

  @SerializedName("allowedCapabilities")
  private List<V1Capability> allowedCapabilities = new ArrayList<V1Capability>();

  @SerializedName("apiVersion")
  private String apiVersion = null;

  @SerializedName("defaultAddCapabilities")
  private List<V1Capability> defaultAddCapabilities = new ArrayList<V1Capability>();

  @SerializedName("fsGroup")
  private V1FSGroupStrategyOptions fsGroup = null;

  @SerializedName("groups")
  private List<String> groups = new ArrayList<String>();

  @SerializedName("kind")
  private String kind = null;

  @SerializedName("metadata")
  private V1ObjectMeta metadata = null;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("readOnlyRootFilesystem")
  private Boolean readOnlyRootFilesystem = null;

  @SerializedName("requiredDropCapabilities")
  private List<V1Capability> requiredDropCapabilities = new ArrayList<V1Capability>();

  @SerializedName("runAsUser")
  private V1RunAsUserStrategyOptions runAsUser = null;

  @SerializedName("seLinuxContext")
  private V1SELinuxContextStrategyOptions seLinuxContext = null;

  @SerializedName("seccompProfiles")
  private List<String> seccompProfiles = new ArrayList<String>();

  @SerializedName("supplementalGroups")
  private V1SupplementalGroupsStrategyOptions supplementalGroups = null;

  @SerializedName("users")
  private List<String> users = new ArrayList<String>();

  @SerializedName("volumes")
  private List<V1FSType> volumes = new ArrayList<V1FSType>();

  public V1SecurityContextConstraints allowHostDirVolumePlugin(Boolean allowHostDirVolumePlugin) {
    this.allowHostDirVolumePlugin = allowHostDirVolumePlugin;
    return this;
  }

   /**
   * AllowHostDirVolumePlugin determines if the policy allow containers to use the HostDir volume plugin
   * @return allowHostDirVolumePlugin
  **/
  @ApiModelProperty(example = "null", required = true, value = "AllowHostDirVolumePlugin determines if the policy allow containers to use the HostDir volume plugin")
  public Boolean getAllowHostDirVolumePlugin() {
    return allowHostDirVolumePlugin;
  }

  public void setAllowHostDirVolumePlugin(Boolean allowHostDirVolumePlugin) {
    this.allowHostDirVolumePlugin = allowHostDirVolumePlugin;
  }

  public V1SecurityContextConstraints allowHostIPC(Boolean allowHostIPC) {
    this.allowHostIPC = allowHostIPC;
    return this;
  }

   /**
   * AllowHostIPC determines if the policy allows host ipc in the containers.
   * @return allowHostIPC
  **/
  @ApiModelProperty(example = "null", required = true, value = "AllowHostIPC determines if the policy allows host ipc in the containers.")
  public Boolean getAllowHostIPC() {
    return allowHostIPC;
  }

  public void setAllowHostIPC(Boolean allowHostIPC) {
    this.allowHostIPC = allowHostIPC;
  }

  public V1SecurityContextConstraints allowHostNetwork(Boolean allowHostNetwork) {
    this.allowHostNetwork = allowHostNetwork;
    return this;
  }

   /**
   * AllowHostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
   * @return allowHostNetwork
  **/
  @ApiModelProperty(example = "null", required = true, value = "AllowHostNetwork determines if the policy allows the use of HostNetwork in the pod spec.")
  public Boolean getAllowHostNetwork() {
    return allowHostNetwork;
  }

  public void setAllowHostNetwork(Boolean allowHostNetwork) {
    this.allowHostNetwork = allowHostNetwork;
  }

  public V1SecurityContextConstraints allowHostPID(Boolean allowHostPID) {
    this.allowHostPID = allowHostPID;
    return this;
  }

   /**
   * AllowHostPID determines if the policy allows host pid in the containers.
   * @return allowHostPID
  **/
  @ApiModelProperty(example = "null", required = true, value = "AllowHostPID determines if the policy allows host pid in the containers.")
  public Boolean getAllowHostPID() {
    return allowHostPID;
  }

  public void setAllowHostPID(Boolean allowHostPID) {
    this.allowHostPID = allowHostPID;
  }

  public V1SecurityContextConstraints allowHostPorts(Boolean allowHostPorts) {
    this.allowHostPorts = allowHostPorts;
    return this;
  }

   /**
   * AllowHostPorts determines if the policy allows host ports in the containers.
   * @return allowHostPorts
  **/
  @ApiModelProperty(example = "null", required = true, value = "AllowHostPorts determines if the policy allows host ports in the containers.")
  public Boolean getAllowHostPorts() {
    return allowHostPorts;
  }

  public void setAllowHostPorts(Boolean allowHostPorts) {
    this.allowHostPorts = allowHostPorts;
  }

  public V1SecurityContextConstraints allowPrivilegedContainer(Boolean allowPrivilegedContainer) {
    this.allowPrivilegedContainer = allowPrivilegedContainer;
    return this;
  }

   /**
   * AllowPrivilegedContainer determines if a container can request to be run as privileged.
   * @return allowPrivilegedContainer
  **/
  @ApiModelProperty(example = "null", required = true, value = "AllowPrivilegedContainer determines if a container can request to be run as privileged.")
  public Boolean getAllowPrivilegedContainer() {
    return allowPrivilegedContainer;
  }

  public void setAllowPrivilegedContainer(Boolean allowPrivilegedContainer) {
    this.allowPrivilegedContainer = allowPrivilegedContainer;
  }

  public V1SecurityContextConstraints allowedCapabilities(List<V1Capability> allowedCapabilities) {
    this.allowedCapabilities = allowedCapabilities;
    return this;
  }

  public V1SecurityContextConstraints addAllowedCapabilitiesItem(V1Capability allowedCapabilitiesItem) {
    this.allowedCapabilities.add(allowedCapabilitiesItem);
    return this;
  }

   /**
   * AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field maybe added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities.
   * @return allowedCapabilities
  **/
  @ApiModelProperty(example = "null", required = true, value = "AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field maybe added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities.")
  public List<V1Capability> getAllowedCapabilities() {
    return allowedCapabilities;
  }

  public void setAllowedCapabilities(List<V1Capability> allowedCapabilities) {
    this.allowedCapabilities = allowedCapabilities;
  }

  public V1SecurityContextConstraints apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

   /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#resources
   * @return apiVersion
  **/
  @ApiModelProperty(example = "null", value = "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#resources")
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }

  public V1SecurityContextConstraints defaultAddCapabilities(List<V1Capability> defaultAddCapabilities) {
    this.defaultAddCapabilities = defaultAddCapabilities;
    return this;
  }

  public V1SecurityContextConstraints addDefaultAddCapabilitiesItem(V1Capability defaultAddCapabilitiesItem) {
    this.defaultAddCapabilities.add(defaultAddCapabilitiesItem);
    return this;
  }

   /**
   * DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities.
   * @return defaultAddCapabilities
  **/
  @ApiModelProperty(example = "null", required = true, value = "DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities.")
  public List<V1Capability> getDefaultAddCapabilities() {
    return defaultAddCapabilities;
  }

  public void setDefaultAddCapabilities(List<V1Capability> defaultAddCapabilities) {
    this.defaultAddCapabilities = defaultAddCapabilities;
  }

  public V1SecurityContextConstraints fsGroup(V1FSGroupStrategyOptions fsGroup) {
    this.fsGroup = fsGroup;
    return this;
  }

   /**
   * Get fsGroup
   * @return fsGroup
  **/
  @ApiModelProperty(example = "null", value = "")
  public V1FSGroupStrategyOptions getFsGroup() {
    return fsGroup;
  }

  public void setFsGroup(V1FSGroupStrategyOptions fsGroup) {
    this.fsGroup = fsGroup;
  }

  public V1SecurityContextConstraints groups(List<String> groups) {
    this.groups = groups;
    return this;
  }

  public V1SecurityContextConstraints addGroupsItem(String groupsItem) {
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * The groups that have permission to use this security context constraints
   * @return groups
  **/
  @ApiModelProperty(example = "null", value = "The groups that have permission to use this security context constraints")
  public List<String> getGroups() {
    return groups;
  }

  public void setGroups(List<String> groups) {
    this.groups = groups;
  }

  public V1SecurityContextConstraints kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#types-kinds
   * @return kind
  **/
  @ApiModelProperty(example = "null", value = "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#types-kinds")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public V1SecurityContextConstraints metadata(V1ObjectMeta metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(example = "null", value = "")
  public V1ObjectMeta getMetadata() {
    return metadata;
  }

  public void setMetadata(V1ObjectMeta metadata) {
    this.metadata = metadata;
  }

  public V1SecurityContextConstraints priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Priority influences the sort order of SCCs when evaluating which SCCs to try first for a given pod request based on access in the Users and Groups fields.  The higher the int, the higher priority.  If scores for multiple SCCs are equal they will be sorted by name.
   * @return priority
  **/
  @ApiModelProperty(example = "null", required = true, value = "Priority influences the sort order of SCCs when evaluating which SCCs to try first for a given pod request based on access in the Users and Groups fields.  The higher the int, the higher priority.  If scores for multiple SCCs are equal they will be sorted by name.")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public V1SecurityContextConstraints readOnlyRootFilesystem(Boolean readOnlyRootFilesystem) {
    this.readOnlyRootFilesystem = readOnlyRootFilesystem;
    return this;
  }

   /**
   * ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the SCC should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.
   * @return readOnlyRootFilesystem
  **/
  @ApiModelProperty(example = "null", required = true, value = "ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the SCC should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.")
  public Boolean getReadOnlyRootFilesystem() {
    return readOnlyRootFilesystem;
  }

  public void setReadOnlyRootFilesystem(Boolean readOnlyRootFilesystem) {
    this.readOnlyRootFilesystem = readOnlyRootFilesystem;
  }

  public V1SecurityContextConstraints requiredDropCapabilities(List<V1Capability> requiredDropCapabilities) {
    this.requiredDropCapabilities = requiredDropCapabilities;
    return this;
  }

  public V1SecurityContextConstraints addRequiredDropCapabilitiesItem(V1Capability requiredDropCapabilitiesItem) {
    this.requiredDropCapabilities.add(requiredDropCapabilitiesItem);
    return this;
  }

   /**
   * RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.
   * @return requiredDropCapabilities
  **/
  @ApiModelProperty(example = "null", required = true, value = "RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.")
  public List<V1Capability> getRequiredDropCapabilities() {
    return requiredDropCapabilities;
  }

  public void setRequiredDropCapabilities(List<V1Capability> requiredDropCapabilities) {
    this.requiredDropCapabilities = requiredDropCapabilities;
  }

  public V1SecurityContextConstraints runAsUser(V1RunAsUserStrategyOptions runAsUser) {
    this.runAsUser = runAsUser;
    return this;
  }

   /**
   * Get runAsUser
   * @return runAsUser
  **/
  @ApiModelProperty(example = "null", value = "")
  public V1RunAsUserStrategyOptions getRunAsUser() {
    return runAsUser;
  }

  public void setRunAsUser(V1RunAsUserStrategyOptions runAsUser) {
    this.runAsUser = runAsUser;
  }

  public V1SecurityContextConstraints seLinuxContext(V1SELinuxContextStrategyOptions seLinuxContext) {
    this.seLinuxContext = seLinuxContext;
    return this;
  }

   /**
   * Get seLinuxContext
   * @return seLinuxContext
  **/
  @ApiModelProperty(example = "null", value = "")
  public V1SELinuxContextStrategyOptions getSeLinuxContext() {
    return seLinuxContext;
  }

  public void setSeLinuxContext(V1SELinuxContextStrategyOptions seLinuxContext) {
    this.seLinuxContext = seLinuxContext;
  }

  public V1SecurityContextConstraints seccompProfiles(List<String> seccompProfiles) {
    this.seccompProfiles = seccompProfiles;
    return this;
  }

  public V1SecurityContextConstraints addSeccompProfilesItem(String seccompProfilesItem) {
    this.seccompProfiles.add(seccompProfilesItem);
    return this;
  }

   /**
   * SeccompProfiles lists the allowed profiles that may be set for the pod or container's seccomp annotations.  An unset (nil) or empty value means that no profiles may be specifid by the pod or container. The wildcard '*' may be used to allow all profiles.  When used to generate a value for a pod the first non-wildcard profile will be used as the default.
   * @return seccompProfiles
  **/
  @ApiModelProperty(example = "null", value = "SeccompProfiles lists the allowed profiles that may be set for the pod or container's seccomp annotations.  An unset (nil) or empty value means that no profiles may be specifid by the pod or container. The wildcard '*' may be used to allow all profiles.  When used to generate a value for a pod the first non-wildcard profile will be used as the default.")
  public List<String> getSeccompProfiles() {
    return seccompProfiles;
  }

  public void setSeccompProfiles(List<String> seccompProfiles) {
    this.seccompProfiles = seccompProfiles;
  }

  public V1SecurityContextConstraints supplementalGroups(V1SupplementalGroupsStrategyOptions supplementalGroups) {
    this.supplementalGroups = supplementalGroups;
    return this;
  }

   /**
   * Get supplementalGroups
   * @return supplementalGroups
  **/
  @ApiModelProperty(example = "null", value = "")
  public V1SupplementalGroupsStrategyOptions getSupplementalGroups() {
    return supplementalGroups;
  }

  public void setSupplementalGroups(V1SupplementalGroupsStrategyOptions supplementalGroups) {
    this.supplementalGroups = supplementalGroups;
  }

  public V1SecurityContextConstraints users(List<String> users) {
    this.users = users;
    return this;
  }

  public V1SecurityContextConstraints addUsersItem(String usersItem) {
    this.users.add(usersItem);
    return this;
  }

   /**
   * The users who have permissions to use this security context constraints
   * @return users
  **/
  @ApiModelProperty(example = "null", value = "The users who have permissions to use this security context constraints")
  public List<String> getUsers() {
    return users;
  }

  public void setUsers(List<String> users) {
    this.users = users;
  }

  public V1SecurityContextConstraints volumes(List<V1FSType> volumes) {
    this.volumes = volumes;
    return this;
  }

  public V1SecurityContextConstraints addVolumesItem(V1FSType volumesItem) {
    this.volumes.add(volumesItem);
    return this;
  }

   /**
   * Volumes is a white list of allowed volume plugins.  FSType corresponds directly with the field names of a VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you may use '*'.
   * @return volumes
  **/
  @ApiModelProperty(example = "null", required = true, value = "Volumes is a white list of allowed volume plugins.  FSType corresponds directly with the field names of a VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you may use '*'.")
  public List<V1FSType> getVolumes() {
    return volumes;
  }

  public void setVolumes(List<V1FSType> volumes) {
    this.volumes = volumes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1SecurityContextConstraints v1SecurityContextConstraints = (V1SecurityContextConstraints) o;
    return Objects.equals(this.allowHostDirVolumePlugin, v1SecurityContextConstraints.allowHostDirVolumePlugin) &&
        Objects.equals(this.allowHostIPC, v1SecurityContextConstraints.allowHostIPC) &&
        Objects.equals(this.allowHostNetwork, v1SecurityContextConstraints.allowHostNetwork) &&
        Objects.equals(this.allowHostPID, v1SecurityContextConstraints.allowHostPID) &&
        Objects.equals(this.allowHostPorts, v1SecurityContextConstraints.allowHostPorts) &&
        Objects.equals(this.allowPrivilegedContainer, v1SecurityContextConstraints.allowPrivilegedContainer) &&
        Objects.equals(this.allowedCapabilities, v1SecurityContextConstraints.allowedCapabilities) &&
        Objects.equals(this.apiVersion, v1SecurityContextConstraints.apiVersion) &&
        Objects.equals(this.defaultAddCapabilities, v1SecurityContextConstraints.defaultAddCapabilities) &&
        Objects.equals(this.fsGroup, v1SecurityContextConstraints.fsGroup) &&
        Objects.equals(this.groups, v1SecurityContextConstraints.groups) &&
        Objects.equals(this.kind, v1SecurityContextConstraints.kind) &&
        Objects.equals(this.metadata, v1SecurityContextConstraints.metadata) &&
        Objects.equals(this.priority, v1SecurityContextConstraints.priority) &&
        Objects.equals(this.readOnlyRootFilesystem, v1SecurityContextConstraints.readOnlyRootFilesystem) &&
        Objects.equals(this.requiredDropCapabilities, v1SecurityContextConstraints.requiredDropCapabilities) &&
        Objects.equals(this.runAsUser, v1SecurityContextConstraints.runAsUser) &&
        Objects.equals(this.seLinuxContext, v1SecurityContextConstraints.seLinuxContext) &&
        Objects.equals(this.seccompProfiles, v1SecurityContextConstraints.seccompProfiles) &&
        Objects.equals(this.supplementalGroups, v1SecurityContextConstraints.supplementalGroups) &&
        Objects.equals(this.users, v1SecurityContextConstraints.users) &&
        Objects.equals(this.volumes, v1SecurityContextConstraints.volumes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowHostDirVolumePlugin, allowHostIPC, allowHostNetwork, allowHostPID, allowHostPorts, allowPrivilegedContainer, allowedCapabilities, apiVersion, defaultAddCapabilities, fsGroup, groups, kind, metadata, priority, readOnlyRootFilesystem, requiredDropCapabilities, runAsUser, seLinuxContext, seccompProfiles, supplementalGroups, users, volumes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1SecurityContextConstraints {\n");
    
    sb.append("    allowHostDirVolumePlugin: ").append(toIndentedString(allowHostDirVolumePlugin)).append("\n");
    sb.append("    allowHostIPC: ").append(toIndentedString(allowHostIPC)).append("\n");
    sb.append("    allowHostNetwork: ").append(toIndentedString(allowHostNetwork)).append("\n");
    sb.append("    allowHostPID: ").append(toIndentedString(allowHostPID)).append("\n");
    sb.append("    allowHostPorts: ").append(toIndentedString(allowHostPorts)).append("\n");
    sb.append("    allowPrivilegedContainer: ").append(toIndentedString(allowPrivilegedContainer)).append("\n");
    sb.append("    allowedCapabilities: ").append(toIndentedString(allowedCapabilities)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    defaultAddCapabilities: ").append(toIndentedString(defaultAddCapabilities)).append("\n");
    sb.append("    fsGroup: ").append(toIndentedString(fsGroup)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    readOnlyRootFilesystem: ").append(toIndentedString(readOnlyRootFilesystem)).append("\n");
    sb.append("    requiredDropCapabilities: ").append(toIndentedString(requiredDropCapabilities)).append("\n");
    sb.append("    runAsUser: ").append(toIndentedString(runAsUser)).append("\n");
    sb.append("    seLinuxContext: ").append(toIndentedString(seLinuxContext)).append("\n");
    sb.append("    seccompProfiles: ").append(toIndentedString(seccompProfiles)).append("\n");
    sb.append("    supplementalGroups: ").append(toIndentedString(supplementalGroups)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

