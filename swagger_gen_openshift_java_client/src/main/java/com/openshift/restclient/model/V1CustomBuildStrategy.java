/**
 * OpenShift API (with Kubernetes)
 * OpenShift provides builds, application lifecycle, image content management, and administrative policy on top of Kubernetes. The API allows consistent management of those objects.  All API operations are authenticated via an Authorization bearer token that is provided for service accounts as a generated secret (in JWT form) or via the native OAuth endpoint located at /oauth/authorize. Core infrastructure components may use client certificates that require no authentication.  All API operations return a 'resourceVersion' string that represents the version of the object in the underlying storage. The standard LIST operation performs a snapshot read of the underlying objects, returning a resourceVersion representing a consistent version of the listed objects. The WATCH operation allows all updates to a set of objects after the provided resourceVersion to be observed by a client. By listing and beginning a watch from the returned resourceVersion, clients may observe a consistent view of the state of one or more objects. Note that WATCH always returns the update after the provided resourceVersion. Watch may be extended a limited time in the past - using etcd 2 the watch window is 1000 events (which on a large cluster may only be a few tens of seconds) so clients must explicitly handle the \"watch to old error\" by re-listing.  Objects are divided into two rough categories - those that have a lifecycle and must reflect the state of the cluster, and those that have no state. Objects with lifecycle typically have three main sections:  * 'metadata' common to all objects * a 'spec' that represents the desired state * a 'status' that represents how much of the desired state is reflected on   the cluster at the current time  Objects that have no state have 'metadata' but may lack a 'spec' or 'status' section.  Objects are divided into those that are namespace scoped (only exist inside of a namespace) and those that are cluster scoped (exist outside of a namespace). A namespace scoped resource will be deleted when the namespace is deleted and cannot be created if the namespace has not yet been created or is in the process of deletion. Cluster scoped resources are typically only accessible to admins - resources like nodes, persistent volumes, and cluster policy.  All objects have a schema that is a combination of the 'kind' and 'apiVersion' fields. This schema is additive only for any given version - no backwards incompatible changes are allowed without incrementing the apiVersion. The server will return and accept a number of standard responses that share a common schema - for instance, the common error type is 'unversioned.Status' (described below) and will be returned on any error from the API server.  The API is available in multiple serialization formats - the default is JSON (Accept: application/json and Content-Type: application/json) but clients may also use YAML (application/yaml) or the native Protobuf schema (application/vnd.kubernetes.protobuf). Note that the format of the WATCH API call is slightly different - for JSON it returns newline delimited objects while for Protobuf it returns length-delimited frames (4 bytes in network-order) that contain a 'versioned.Watch' Protobuf object.  See the OpenShift documentation at https://docs.openshift.org for more information. 
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.openshift.restclient.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.openshift.restclient.model.V1EnvVar;
import com.openshift.restclient.model.V1LocalObjectReference;
import com.openshift.restclient.model.V1ObjectReference;
import com.openshift.restclient.model.V1SecretSpec;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * CustomBuildStrategy defines input parameters specific to Custom build.
 */
@ApiModel(description = "CustomBuildStrategy defines input parameters specific to Custom build.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-10-24T16:19:28.908-04:00")
public class V1CustomBuildStrategy   {
  @SerializedName("buildAPIVersion")
  private String buildAPIVersion = null;

  @SerializedName("env")
  private List<V1EnvVar> env = new ArrayList<V1EnvVar>();

  @SerializedName("exposeDockerSocket")
  private Boolean exposeDockerSocket = null;

  @SerializedName("forcePull")
  private Boolean forcePull = null;

  @SerializedName("from")
  private V1ObjectReference from = null;

  @SerializedName("pullSecret")
  private V1LocalObjectReference pullSecret = null;

  @SerializedName("secrets")
  private List<V1SecretSpec> secrets = new ArrayList<V1SecretSpec>();

  public V1CustomBuildStrategy buildAPIVersion(String buildAPIVersion) {
    this.buildAPIVersion = buildAPIVersion;
    return this;
  }

   /**
   * buildAPIVersion is the requested API version for the Build object serialized and passed to the custom builder
   * @return buildAPIVersion
  **/
  @ApiModelProperty(example = "null", value = "buildAPIVersion is the requested API version for the Build object serialized and passed to the custom builder")
  public String getBuildAPIVersion() {
    return buildAPIVersion;
  }

  public void setBuildAPIVersion(String buildAPIVersion) {
    this.buildAPIVersion = buildAPIVersion;
  }

  public V1CustomBuildStrategy env(List<V1EnvVar> env) {
    this.env = env;
    return this;
  }

  public V1CustomBuildStrategy addEnvItem(V1EnvVar envItem) {
    this.env.add(envItem);
    return this;
  }

   /**
   * env contains additional environment variables you want to pass into a builder container
   * @return env
  **/
  @ApiModelProperty(example = "null", value = "env contains additional environment variables you want to pass into a builder container")
  public List<V1EnvVar> getEnv() {
    return env;
  }

  public void setEnv(List<V1EnvVar> env) {
    this.env = env;
  }

  public V1CustomBuildStrategy exposeDockerSocket(Boolean exposeDockerSocket) {
    this.exposeDockerSocket = exposeDockerSocket;
    return this;
  }

   /**
   * exposeDockerSocket will allow running Docker commands (and build Docker images) from inside the Docker container.
   * @return exposeDockerSocket
  **/
  @ApiModelProperty(example = "null", value = "exposeDockerSocket will allow running Docker commands (and build Docker images) from inside the Docker container.")
  public Boolean getExposeDockerSocket() {
    return exposeDockerSocket;
  }

  public void setExposeDockerSocket(Boolean exposeDockerSocket) {
    this.exposeDockerSocket = exposeDockerSocket;
  }

  public V1CustomBuildStrategy forcePull(Boolean forcePull) {
    this.forcePull = forcePull;
    return this;
  }

   /**
   * forcePull describes if the controller should configure the build pod to always pull the images for the builder or only pull if it is not present locally
   * @return forcePull
  **/
  @ApiModelProperty(example = "null", value = "forcePull describes if the controller should configure the build pod to always pull the images for the builder or only pull if it is not present locally")
  public Boolean getForcePull() {
    return forcePull;
  }

  public void setForcePull(Boolean forcePull) {
    this.forcePull = forcePull;
  }

  public V1CustomBuildStrategy from(V1ObjectReference from) {
    this.from = from;
    return this;
  }

   /**
   * Get from
   * @return from
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public V1ObjectReference getFrom() {
    return from;
  }

  public void setFrom(V1ObjectReference from) {
    this.from = from;
  }

  public V1CustomBuildStrategy pullSecret(V1LocalObjectReference pullSecret) {
    this.pullSecret = pullSecret;
    return this;
  }

   /**
   * Get pullSecret
   * @return pullSecret
  **/
  @ApiModelProperty(example = "null", value = "")
  public V1LocalObjectReference getPullSecret() {
    return pullSecret;
  }

  public void setPullSecret(V1LocalObjectReference pullSecret) {
    this.pullSecret = pullSecret;
  }

  public V1CustomBuildStrategy secrets(List<V1SecretSpec> secrets) {
    this.secrets = secrets;
    return this;
  }

  public V1CustomBuildStrategy addSecretsItem(V1SecretSpec secretsItem) {
    this.secrets.add(secretsItem);
    return this;
  }

   /**
   * secrets is a list of additional secrets that will be included in the build pod
   * @return secrets
  **/
  @ApiModelProperty(example = "null", value = "secrets is a list of additional secrets that will be included in the build pod")
  public List<V1SecretSpec> getSecrets() {
    return secrets;
  }

  public void setSecrets(List<V1SecretSpec> secrets) {
    this.secrets = secrets;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1CustomBuildStrategy v1CustomBuildStrategy = (V1CustomBuildStrategy) o;
    return Objects.equals(this.buildAPIVersion, v1CustomBuildStrategy.buildAPIVersion) &&
        Objects.equals(this.env, v1CustomBuildStrategy.env) &&
        Objects.equals(this.exposeDockerSocket, v1CustomBuildStrategy.exposeDockerSocket) &&
        Objects.equals(this.forcePull, v1CustomBuildStrategy.forcePull) &&
        Objects.equals(this.from, v1CustomBuildStrategy.from) &&
        Objects.equals(this.pullSecret, v1CustomBuildStrategy.pullSecret) &&
        Objects.equals(this.secrets, v1CustomBuildStrategy.secrets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buildAPIVersion, env, exposeDockerSocket, forcePull, from, pullSecret, secrets);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1CustomBuildStrategy {\n");
    
    sb.append("    buildAPIVersion: ").append(toIndentedString(buildAPIVersion)).append("\n");
    sb.append("    env: ").append(toIndentedString(env)).append("\n");
    sb.append("    exposeDockerSocket: ").append(toIndentedString(exposeDockerSocket)).append("\n");
    sb.append("    forcePull: ").append(toIndentedString(forcePull)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    pullSecret: ").append(toIndentedString(pullSecret)).append("\n");
    sb.append("    secrets: ").append(toIndentedString(secrets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

